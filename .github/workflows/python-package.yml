name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build Python Package üêç
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude tests,.venv,.github
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude tests,.venv,.github
      - name: Test with pytest
        run: |
          pytest --cov --cov-report xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4-beta
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Install pypa/build
        run: |
          python -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: dados-gov-python-sdk
          path: dist/

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
#    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/dados-gov-sdk  # Replace <package-name> with your PyPI project name
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: dados-gov-python-sdk
          path: dist/
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

  github-release:
    name: >-
      Sign the Python üêç distribution üì¶ with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: dados-gov-python-sdk
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v1.2.3
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'